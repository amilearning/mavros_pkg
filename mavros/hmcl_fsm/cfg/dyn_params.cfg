#!/usr/bin/env python
PACKAGE = "hmcl_fsm"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("d0", double_t, 0, "d0 value",    3.0, 0,  4)
gen.add("k0", double_t, 0, "k0 value",    0.005, 0,   0.9)
gen.add("lidar_min_threshold", double_t, 0, "ignore lidar data less than this value",    0.3, 0,   2)
gen.add("lidar_avoidance_distance", double_t, 0, "activate lidar based avoidance if min distance greater than this ",    1.2, 0.5,   3)
gen.add("lidar_final_avoidance_distance", double_t, 0, "lidar_final_avoidance_distance based avoidance if min distance greater than this ",    0.75, 0.6,   1.5)
gen.add("lidar_avoidance_move_distance", double_t, 0, "How much do we move to avoid local obstacle",    0.4, 0.05,   0.7)
gen.add("thrust_scale", double_t, 0, "thrust_scale value",    0.035, 0,   1)
gen.add("float_control", bool_t, 0, "float_control",  False)
gen.add("manual_trj_switch",bool_t, 0,"switch to send manual trajectory", False)
gen.add("manual_yaw_switch",bool_t, 0,"switch to send manual yaw", False)
gen.add("target_x", double_t, 0, "manual trj target x",    -1.4, -30.0,   30.00)
gen.add("target_y", double_t, 0, "manual trj target y",    -1.689, -30.0,   30.00)
gen.add("target_z", double_t, 0, "manual trj target z",    0.00, -0.2,   1.2)
gen.add("target_yaw", double_t, 0, "manual trj target yaw",    0.00, -3.14195,   3.14195)
gen.add("waypoint_switch",bool_t, 0,"waypoints iteration starts", False)
gen.add("local_avoidance_switch",bool_t, 0,"activate local avoidance", False)
gen.add("vector_avoidance_scale", double_t, 0, "manual trj target yaw",    0.0, 0.0,   100.0)
# gen.add("local_trj_switch",bool_t, 0,"control mav based on local planned trajectory", False)
gen.add("local_target_x", double_t, 0, "target x pose for local planner",    20, -100.0,   100.0)
gen.add("local_target_y", double_t, 0, "target y pose for local planner",    -2, -100.63,   100.0)
# gen.add("local_target_send",bool_t, 0,"send local pose goal", False)
gen.add("wall_l_follow",bool_t, 0,"wall_r_follow", False)
gen.add("wall_r_follow",bool_t, 0,"wall_l_follow", False)


gen.add("landing_switch",bool_t, 0,"landing", False)


exit(gen.generate(PACKAGE, "hmcl_fsm", "dyn_params"))