#!/usr/bin/env python
PACKAGE = "hmcl_fsm"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# gen.add("d0", double_t, 0, "d0 value",    3.0, 0,  4)
# gen.add("k0", double_t, 0, "k0 value",    0.004, 0,   0.9)

gen.add("lidar_min_threshold", double_t, 0, "ignore lidar data less than this value",    0.2, 0,   2)
gen.add("lidar_avoidance_distance", double_t, 0, "activate lidar based avoidance if min distance greater than this ",    1.1, 0.5,   3)
gen.add("lidar_final_avoidance_distance", double_t, 0, "lidar_final_avoidance_distance based avoidance if min distance greater than this ",    0.85, 0.6,   1.5)
gen.add("lidar_avoidance_move_distance", double_t, 0, "How much do we move to avoid local obstacle",    0.75, 0.05,   1.5)
gen.add("manual_trj_switch",bool_t, 0,"switch to send manual trajectory", False)



gen.add("target_x", double_t, 0, "manual trj target x",    -1.4, -30.0,   30.00)
gen.add("target_y", double_t, 0, "manual trj target y",    -1.689, -30.0,   30.00)
gen.add("target_z", double_t, 0, "manual trj target z",    0.00, -0.2,   2.0)
gen.add("d0", double_t, 0, "d0",    3.0, 0.0,   6.0)
gen.add("k0", double_t, 0, "k0",    0.0040, 0.0,   1.0)
gen.add("target_yaw", double_t, 0, "manual trj target yaw",    0.00, -3.14195,   3.14195)

gen.add("vector_avoidance_scale", double_t, 0, "vector_avoidance_scale",    0.0, 0.0,   100.0)

exit(gen.generate(PACKAGE, "hmcl_fsm", "dyn_params"))